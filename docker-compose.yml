name: docker_compose_Gluon

services:


# NGINX #########################################################################

  nginx:
    image: nginx:alpine
    container_name: NGINX_gluon
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro    # Configuration des serveurs virtuels
      - ./nginx/certs:/etc/nginx/certs:ro    # Certificats SSL (si besoin)
      - ./nginx/logs:/var/log/nginx          # Logs pour debug
      - ./nginx/html:/usr/share/nginx/html:ro # Fichiers statiques (optionnel)
    restart: always


# SQL #########################################################################

  client.sqlsvr:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlsvr.client
    user: root
    ports:
      - 1433:1433
    environment:
      MSSQL_SA_PASSWORD: "ClientDataPassword2024" # Mot de passe pour l'utilisateur 'sa'
      ACCEPT_EULA: "Y" # Acceptation de la licence 
    volumes:
      - ./data/clientData:/var/opt/mssql/data
    # restart: always
    
  auth.sqlsvr:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlsvr.auth
    ports:
      - 1434:1433
    environment:
      MSSQL_SA_PASSWORD: "P@$$w0rd_24" # Mot de passe pour l'utilisateur 'sa'
      ACCEPT_EULA: "Y" # Acceptation de la licence 
    volumes:
      - ./data/authData:/var/opt/mssql/data
    # restart: always
 

    # API ##############################################################

  client.api:
    image: ${DOCKER_REGISTRY-}clientapi
    build:
      context: .
      dockerfile: Client.Api/Dockerfile
    depends_on:
      - client.sqlsvr
  
  auth.api:
    image: ${DOCKER_REGISTRY-}authapi
    build:
      context: .
      dockerfile: Auth.Api/Dockerfile
    depends_on:
      - auth.sqlsvr


